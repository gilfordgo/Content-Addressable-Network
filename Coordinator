import java.io.*;
import java.net.*;
import java.util.*;



class Bootstrap extends Thread {
	private Socket socket;
	private int peerNumber;
	InetAddress ipAddr;
	static String input=null;
	static String inp=null;
	Random rnd=new Random();
	static boolean check;
	
	public Bootstrap(Socket socket, int peerNumber) {
		this.socket = socket;
		this.peerNumber = peerNumber;
		System.out.println("New connection with peer# " + peerNumber
				+ " at " + socket);	
	}
	
	public void run() {
		try {

			BufferedReader in = new BufferedReader(new InputStreamReader(
					socket.getInputStream()));
			PrintWriter out = new PrintWriter(socket.getOutputStream(),
					true);
			out.println(peerNumber);
			if(peerNumber==0){			
				input = in.readLine();
				System.out.println(input);
			}else if (peerNumber==1){
				inp = in.readLine();
				System.out.println(inp);
				out.println(input);
				int x=rnd.nextInt(10000)%10;
				int y=rnd.nextInt(10000)%10;
				out.println(x);
				out.println(y);
			}else{
				if(check)
					out.println(inp);
				else
					out.println(input);
				int x=rnd.nextInt(10000)%10;
				int y=rnd.nextInt(10000)%10;
				out.println(x);
				out.println(y);
			}			
			while(true){
				if(socket.getInputStream().read()==-1){
					break;
				}
			}
			
		} catch (IOException e) {
			System.out.println("Error handling client# " + peerNumber
					+ ": " + e);
		} finally {
			try {
				if(this.peerNumber==0)
					check=true;
				socket.close();
			} catch (IOException e) {
				System.out
						.println("Couldn't close a socket, what's going on?");
			}
			System.out.println("Connection with peer# " + peerNumber
					+ " closed");
		}
	}
}

public class Coordinator  {
	public static void main(String args[]) throws Exception {
		int peerNumber = 0;
		ServerSocket listener = new ServerSocket(9000);
		try {
			while (true) {
				new Bootstrap(listener.accept(), peerNumber++).start();					
			}
			
		} finally {
			listener.close();
		}

	}
}
